{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "collaborators_",
						"type": "address[]"
					},
					{
						"internalType": "uint8",
						"name": "at_least_sign_count_",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "balance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancel_withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancel_withdraw_by_counterparty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAccount",
						"type": "address"
					}
				],
				"name": "changePlatformAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "collaboratorSign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "weis",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "targetAddress",
						"type": "address"
					}
				],
				"name": "process_withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "topin",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw_count",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw_fee_rate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw_free_count",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"balance()": {
					"notice": "当前余额，单位是wei"
				},
				"cancel_withdraw()": {
					"notice": "发起方才能直接取消提款"
				},
				"cancel_withdraw_by_counterparty()": {
					"notice": "增加一个另外全方，协作罢免发起方的提款请求 这是在发起方帐户丢失时才需要干的事情，防止合同废掉了，卡死在这里 发起方会先签名一次，如果金额有误且非常重大但刚好帐户丢失，直接让另外一方签署 容易导致大额损失，所以通过取消的操作来进行。"
				},
				"collaboratorSign()": {
					"notice": "协作方签名，只要进来这个函数，就是说明前面的以太坊认证已经通过，收集地址即可。 当最后一个签名方满足多签需求的时候，直接发起转账提款"
				},
				"topin()": {
					"notice": "充值转入，谁都可以转，用于收款"
				},
				"withdraw_count()": {
					"notice": "记录转账多少次，可以设置一些条款，例如前10次免费，之后按xx比例收取手续费。 手续费打入xx帐户。"
				},
				"withdraw_fee_rate()": {
					"notice": "转账费率，单位是万分之一"
				},
				"withdraw_free_count()": {
					"notice": "前N次免费"
				}
			},
			"notice": "多签名钱包简单实现。",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/MultisigWallet.sol": "MultisigWallet"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/MultisigWallet.sol": {
			"keccak256": "0x587d842b12fbff9ce43d189e83d05f31f64a864831f1419e55b80c8811051110",
			"license": "LGPL-3.0-only",
			"urls": [
				"bzz-raw://10c9212ae5b7102b83de9c8462a95e82df7a6f792df1a9d9175041f41e4508c9",
				"dweb:/ipfs/QmcQwctpvMujknMT6HgEwEQywRNRsmDDBkFcavXdWhmRpy"
			]
		}
	},
	"version": 1
}